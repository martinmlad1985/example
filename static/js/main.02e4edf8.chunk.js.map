{"version":3,"sources":["API/API.js","Redux/AuthReduser.js","Redux/AppReducer.js","Redux/store_redux.js","Components/Navbar/MyMessage/MyMessage.jsx","Components/Navbar/MyPage/MyPage.jsx","Components/Navbar/Users/Users.jsx","Components/Navbar/Navbar.jsx","Components/Header/Header.jsx","Components/Header/HeaderContainer.jsx","App.js","serviceWorker.js","index.js","Redux/MyUsersReducer.js","Components/Header/Header.module.css","Components/Preloader/Preloader.jsx","Redux/MyPostsReducer.js","Redux/MyDialogsReducer.js","Components/Navbar/Navbar.module.css","Components/Navbar/MyMessage/MyMessage.module.css","Components/Navbar/MyPage/MyPage.module.css","Components/Navbar/Users/Users.module.css","assets/images/preloader.png"],"names":["instance","axios","withCredentials","baseURL","headers","authAPI","authMe","get","then","response","data","login","formData","post","logout","delete","usersAPI","unfollow","userId","follow","profileAPI","getStatus","updateStatus","status","put","initialState","id","email","isAuth","getUserData","type","getUserDataThunkCreator","dispatch","resultCode","sendLoginCreator","message","messages","length","stopSubmit","_error","sendLogoutCreator","AuthReducer","state","action","initialStatus","AppReducer","reducers","combineReducers","MyPostReducer","MyDialogsReducer","MyUsersReducer","form","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","MyMessage","to","activeClassName","c","active","MyPage","Users","s","Navbar","className","navbar","Header","props","header","onClick","HeaderContainer","this","React","Component","connect","Content","lazy","App","initializeThunkCreator","Suspense","fallback","Preloader","withRouter","promise","Promise","all","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","setUsers","users","setCurrentPage","pageNumber","setUsersTotalCount","totalCount","setIsFetching","isFetch","disableButton","result","pageSize","totalUsersCount","currentPage","isFetching","isFollowing","buttonUnfollowThunkCreator","buttonFollowThunkCreator","map","elem","followed","filter","module","exports","src","preloader","ChangePostttCreator","value","getUserProfile","userProfile","setStatus","arrPosts","currentPost","getStatusThunkCreator","updateStatusThunkCreator","changeMessageCreator","addMessageCreator","arrName","name","arrMessage","currentMessage","copyState"],"mappings":"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","file":"static/js/main.02e4edf8.chunk.js","sourcesContent":["import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"40147a3c-46f9-41aa-88c9-2097b50ab9db\"\r\n    }\r\n})\r\n\r\n\r\nexport const authAPI = {\r\n    authMe() {                              //В параметры можно загонять данные из .......Container\r\n        return instance.get('auth/me')\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    login(formData) {                          //Делаем запрос на сервер на логинизацию\r\n        return instance.post('auth/login', formData)\r\n    },\r\n    logout() {                          //Делаем запрос на сервер на логинизацию\r\n        return instance.delete('auth/login')\r\n    }\r\n}\r\n\r\nexport const usersAPI = {\r\n   unfollow(userId) {\r\n     return  instance.delete(`follow/` + userId)\r\n    },\r\n    follow(userId) {\r\n      return  instance.post(`follow/` + userId)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n   getStatus(userId){\r\n       return instance.get(`/profile/status/${userId}`)\r\n   },\r\n   updateStatus(status){\r\n       return instance.put(`/profile/status`, {\r\n           status: status\r\n       })\r\n\r\n   }\r\n}\r\n","import {authAPI} from \"../API/API\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst GET_USER_DATA = 'GET_USER_DATA';\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\nlet AuthReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport let getUserData = (id, email, login, isAuth) => {\r\n    return {type: GET_USER_DATA, data: {id, email, login, isAuth}};\r\n}\r\n\r\nexport let getUserDataThunkCreator = () =>  (dispatch) => {\r\n     return authAPI.authMe().then(data => {\r\n            if (data.resultCode === 0) {\r\n                let {id, email, login} = data.data;\r\n                dispatch(getUserData(id, email, login, true));\r\n            }\r\n        })\r\n    }\r\n\r\n\r\nexport let sendLoginCreator = (formData) =>  (dispatch) => {\r\n        authAPI.login(formData).then(data => {debugger\r\n            if (data.data.resultCode === 0) {\r\n                dispatch(getUserDataThunkCreator());\r\n            } else {\r\n                let message= data.data.messages.length> 0 ? data.data.messages[0] : 'incorrect value';\r\n                dispatch(stopSubmit('login', {_error: message}));\r\n            }\r\n        })\r\n    }\r\n\r\n\r\nexport let sendLogoutCreator = () =>  (dispatch) => {\r\n        authAPI.logout().then(data => {\r\n            if (data.data.resultCode === 0) {\r\n                dispatch(getUserData(null, null, null, false));\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n\r\nexport default AuthReducer;","import {getUserDataThunkCreator} from \"./AuthReduser\";\r\n\r\n\r\nconst INITIALIZE = 'INITIALIZE'\r\n\r\nlet initialState = {\r\n    initialStatus: false\r\n}\r\n\r\n\r\nlet AppReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZE:\r\n            return {\r\n                ...state,\r\n                initialStatus: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nlet initialize = () => {\r\n    return {type: INITIALIZE};\r\n}\r\n\r\nexport let initializeThunkCreator = () => (dispatch) => {\r\n        let promise = dispatch(getUserDataThunkCreator());\r\n        Promise.all([promise])\r\n            .then(() => {\r\n                dispatch(initialize());\r\n            });\r\n    }\r\n\r\n\r\n\r\nexport default AppReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport MyPostReducer from \"./MyPostsReducer\";\r\nimport MyDialogsReducer from \"./MyDialogsReducer\";\r\nimport MyUsersReducer from \"./MyUsersReducer\";\r\nimport AuthReducer from \"./AuthReduser\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport AppReducer from \"./AppReducer\";\r\n\r\nlet reducers= combineReducers({\r\n    MyPostReducer: MyPostReducer,\r\n    MyDialogsReducer: MyDialogsReducer,\r\n    MyUsersReducer: MyUsersReducer,\r\n    AuthReducer: AuthReducer,\r\n    form: formReducer,\r\n    AppReducer: AppReducer\r\n});\r\n\r\n const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n const store = createStore(reducers, /* preloadedState, */ composeEnhancers(\r\n       applyMiddleware(thunkMiddleware)\r\n));\r\n\r\n\r\n//let store= createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store= store;\r\n\r\nexport default store;","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport c from \"./MyMessage.module.css\";\r\n\r\nconst MyMessage = () => {\r\n    return (\r\n        <div>\r\n            <NavLink to=\"/dialogs\" activeClassName={c.active} >\r\n                MyMessage\r\n            </NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyMessage;","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport c from \"./MyPage.module.css\";\r\n\r\nconst MyPage = () => {\r\n    return (\r\n        <div>\r\n            <NavLink to= \"/posts\" activeClassName={c.active}>\r\n                MyPage\r\n            </NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyPage;","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from \"./Users.module.css\"\r\n\r\nconst Users= ()=>{\r\n    return (\r\n        <div>\r\n            <NavLink to= \"/users\" activeClassName={s.active} >\r\n                Users\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users","import React from \"react\";\r\nimport c from \"./Navbar.module.css\";\r\nimport MyMessage from \"./MyMessage/MyMessage\";\r\nimport MyPage from \"./MyPage/MyPage\";\r\nimport Users from \"./Users/Users\";\r\n\r\nconst Navbar= ()=> {\r\n    return (\r\n        <div className= {c.navbar}>\r\n            Navbar\r\n            <MyPage/>\r\n            <MyMessage/>\r\n            <Users/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport c from \"./Header.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header= (props)=> {\r\n    let logout= ()=>{\r\n        props.sendLogoutCreator();\r\n    }\r\n    return (\r\n        <div className= {c.header}>\r\n            Header\r\n            <div className={c.login}>\r\n            { props.isAuth\r\n                ?<div>{props.login}  <button onClick={logout}>Logout</button></div>\r\n                :<NavLink to=\"/login\">login</NavLink>\r\n            }\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserDataThunkCreator, sendLogoutCreator} from \"../../Redux/AuthReduser\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n    // componentDidMount() {\r\n    //     this.props.getUserDataThunkCreator();\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props}/>\r\n        );\r\n    }\r\n\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        id: state.AuthReducer.id,\r\n        email: state.AuthReducer.email,\r\n        login: state.AuthReducer.login,\r\n        isAuth: state.AuthReducer.isAuth\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, {getUserDataThunkCreator, sendLogoutCreator})(HeaderContainer);\r\n","import React, {Component} from 'react';\nimport \"./App.css\";\nimport Navbar from \"./Components/Navbar/Navbar\";\n// import Content from \"./Components/Content/Content\";\nimport HeaderContainer from \"./Components/Header/HeaderContainer\";\nimport {connect} from \"react-redux\";\nimport {initializeThunkCreator} from \"./Redux/AppReducer\";\nimport Preloader from \"./Components/Preloader/Preloader\";\nimport {withRouter} from \"react-router-dom\";\nimport {compose} from \"redux\";\n\nconst Content = React.lazy(() => import('./Components/Content/Content'));\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.initializeThunkCreator();\n  }\n\n  render() {\n\n    if (!this.props.initialStatus) {\n      return (\n          <div>\n            <Preloader/>\n          </div>\n      )\n    }\n\n    return (\n        <div className=\"wrapper\">\n          <HeaderContainer/>\n          <Navbar/>\n          <React.Suspense fallback={<div>Загрузка...</div>}>\n            <Content/>\n          </React.Suspense>\n        </div>\n    )\n  }\n}\n\nlet mapStateToProps = (props) => {\n  return {\n    initialStatus: props.AppReducer.initialStatus\n  }\n}\n\nexport default compose(\n    withRouter,\n    connect(mapStateToProps, {initializeThunkCreator}))(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport store from './Redux/store_redux';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>, document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {usersAPI} from \"../API/API\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_USERS_TOTAL_COUNT = 'SET_USERS_TOTAL_COUNT';\r\nconst SET_IS_FETCHING= 'SET_IS_FETCHING';\r\nconst DISABLE_BUTTON= 'DISABLE_BUTTON';\r\n\r\nexport let follow = (id) => {\r\n    return {type: FOLLOW, id: id};\r\n}\r\nexport let unfollow = (id) => {\r\n    return {type: UNFOLLOW, id: id};\r\n}\r\nexport let setUsers = (users) => {\r\n    return {type: SET_USERS, users}\r\n}\r\nexport let setCurrentPage = (pageNumber) => {\r\n    return {type: SET_CURRENT_PAGE, pageNumber}\r\n}\r\nexport let setUsersTotalCount = (totalCount) => {\r\n    return {type: SET_USERS_TOTAL_COUNT, totalCount}\r\n}\r\nexport let setIsFetching = (isFetch) => {\r\n    return {type: SET_IS_FETCHING, isFetch}\r\n}\r\nexport let disableButton = (result, userId) => {\r\n    return {type: DISABLE_BUTTON, result, userId}\r\n}\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 40,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    isFollowing: [ ]\r\n}\r\n\r\nlet MyUsersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: state.users.map((elem) => {\r\n                    if (elem.id === action.id) {\r\n                        return {...elem, followed: true}\r\n                    }\r\n                    return elem;\r\n                })\r\n            }\r\n        }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map((elem) => {\r\n                    if (elem.id === action.id) {\r\n                        return {...elem, followed: false}\r\n                    }\r\n                    return elem;\r\n                })\r\n            }\r\n        case  SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: [...action.users]\r\n            }\r\n        }\r\n        case  SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.pageNumber\r\n            }\r\n        }\r\n        case SET_USERS_TOTAL_COUNT : {\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalCount\r\n            }\r\n        }\r\n        case SET_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetch\r\n            }\r\n        }\r\n        case DISABLE_BUTTON: {\r\n            return {\r\n                ...state,\r\n                isFollowing: action.result\r\n                    ? [...state.isFollowing, action.userId]\r\n                    : state.isFollowing.filter(elem=> elem !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport let buttonUnfollowThunkCreator= (userId)=> (dispatch) => {\r\n        dispatch(disableButton(true, userId));\r\n        usersAPI.unfollow(userId).then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(unfollow(userId));\r\n            }\r\n            dispatch(disableButton(false, userId));\r\n        })\r\n    }\r\n\r\n\r\nexport let buttonFollowThunkCreator= (userId)=> (dispatch) => {\r\n        dispatch(disableButton(true, userId));\r\n        usersAPI.follow(userId).then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(follow(userId));\r\n            }\r\n            dispatch(disableButton(false, userId));\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default MyUsersReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1niV_\",\"login\":\"Header_login__1_ST2\"};","import preloader from \"../../assets/images/preloader.png\";\r\nimport React from \"react\";\r\n\r\nlet Preloader= ()=>{\r\n    return (\r\n        <div><img src={preloader} /></div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","import {profileAPI, usersAPI} from \"../API/API\";\r\nimport {disableButton, follow} from \"./MyUsersReducer\";\r\n\r\nconst CHANGE_POSTTT = 'CHANGE-POSTTT';\r\nconst GET_USER_PROFILE = 'GET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS'\r\n\r\nexport let ChangePostttCreator = (value) => {\r\n    return {type: CHANGE_POSTTT, value};\r\n}\r\n\r\nexport let getUserProfile = (userProfile) => {\r\n    return {type: GET_USER_PROFILE, userProfile};\r\n}\r\nexport let setStatus = (status) => {\r\n    return {type: SET_STATUS, status: status}\r\n}\r\n\r\n\r\nlet initialState = {\r\n    arrPosts: ['Post1', 'Post2', 'Post3', 'Post4'],\r\n    currentPost: '',\r\n    userProfile: null,\r\n    status: ''\r\n}\r\n\r\nconst MyPostReducer = (state = initialState, action) => {\r\n    if (action.type === CHANGE_POSTTT) {\r\n        return {\r\n            ...state,\r\n            arrPosts: [...state.arrPosts, action.value]\r\n\r\n        }\r\n    }\r\n\r\n    if (action.type === GET_USER_PROFILE) {\r\n        return {\r\n            ...state,\r\n            userProfile: action.userProfile\r\n        }\r\n    }\r\n    if (action.type === SET_STATUS) {\r\n        return {\r\n            ...state,\r\n            status: action.status\r\n        }\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nexport let getStatusThunkCreator = (userId) => (dispatch) => {\r\n        profileAPI.getStatus(userId).then(response => {\r\n\r\n            dispatch(setStatus(response.data));\r\n        })\r\n    }\r\n\r\n\r\nexport let updateStatusThunkCreator = (status) =>  (dispatch) => {\r\n        profileAPI.updateStatus(status).then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setStatus(status));\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n\r\nexport default MyPostReducer;","const CHANGE_MESSAGE = 'CHANGE-MESSAGE';\r\nconst ADD_MESSAGE = 'ADD-MESSAGE';\r\n\r\nexport let changeMessageCreator = (result) => {\r\n    return {type: CHANGE_MESSAGE, elem: result};\r\n}\r\nexport let addMessageCreator = (result) => {\r\n    return {type: ADD_MESSAGE, elem: result};\r\n}\r\n\r\nlet initialState = {\r\n    arrName: [\r\n        {name: 'Dima', id: '1'},\r\n        {name: 'Anna', id: '2'},\r\n        {name: 'Dasha', id: '3'},\r\n        {name: 'Margo', id: '4'}\r\n    ],\r\n    arrMessage: [\r\n        {message: 'Hello', id: '1'},\r\n        {message: 'Good day', id: '2'},\r\n        {message: 'By-By', id: '3'}\r\n    ],\r\n    currentMessage: ''\r\n};\r\n\r\nconst MyDialogsReducer = (state = initialState, action) => {\r\n\r\n    if (action.type === CHANGE_MESSAGE) {\r\n        return {\r\n            copyState: {...state},\r\n            arrName: [...state.arrName],\r\n            arrMessage: [...state.arrMessage],\r\n            currentMessage: action.elem\r\n        }\r\n    }\r\n\r\n    if (action.type === ADD_MESSAGE) {\r\n        return {\r\n            copyState: {...state},\r\n            arrName: [...state.arrName],\r\n            arrMessage: [...state.arrMessage, {message: state.currentMessage, id: '4'}],\r\n            currentMessage: ''\r\n        }\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default MyDialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__3Gw8S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"active\":\"MyMessage_active__1bMAs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"active\":\"MyPage_active__3s-Oy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"active\":\"Users_active__3jMg7\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.ad438a26.png\";"],"sourceRoot":""}